[package]
name = "reth-trie-parallel"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Parallel implementation of merkle root algorithm"

[lints]
workspace = true

[dependencies]
# reth
reth-primitives.workspace = true
reth-db.workspace = true
reth-trie.workspace = true
reth-trie-common.workspace = true
reth-trie-db.workspace = true
reth-execution-errors.workspace = true
reth-provider.workspace = true

# alloy
alloy-rlp.workspace = true
alloy-primitives.workspace = true

# tracing
tracing.workspace = true

# misc
thiserror.workspace = true
derive_more.workspace = true
rayon.workspace = true
itertools.workspace = true

# `metrics` feature
reth-metrics = { workspace = true, optional = true }
metrics = { workspace = true, optional = true }

[dev-dependencies]
# reth
reth-primitives = { workspace = true, features = ["test-utils", "arbitrary"] }
reth-provider = { workspace = true, features = ["test-utils"] }
reth-trie = { workspace = true, features = ["test-utils"] }

# misc
rand.workspace = true
rayon.workspace = true
criterion.workspace = true
proptest.workspace = true
proptest-arbitrary-interop.workspace = true

[features]
default = ["metrics"]
metrics = ["reth-metrics", "dep:metrics", "reth-trie/metrics"]
test-utils = [
    "reth-trie/test-utils",
    "reth-trie-common/test-utils",
    "reth-db/test-utils",
    "reth-primitives/test-utils",
    "reth-provider/test-utils",
    "reth-trie-db/test-utils",
]

[[bench]]
name = "root"
harness = false
