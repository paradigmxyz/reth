[package]
name = "reth-ethereum-forks"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Ethereum fork types used in reth."

[lints]
workspace = true

[dependencies]
# ethereum
alloy-chains.workspace = true
alloy-primitives = { workspace = true, features = ["serde", "rand", "rlp"] }
alloy-rlp = { workspace = true, features = ["arrayvec", "derive"] }
once_cell.workspace = true

# used for forkid
crc = "3"

# misc
serde = { workspace = true, features = ["derive"], optional = true }
thiserror-no-std = { workspace = true, default-features = false }
dyn-clone.workspace = true
rustc-hash = { workspace = true, optional = true }

# arbitrary utils
arbitrary = { workspace = true, features = ["derive"], optional = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
auto_impl.workspace = true

[dev-dependencies]
arbitrary = { workspace = true, features = ["derive"] }
alloy-consensus.workspace = true

[features]
default = ["std", "serde", "rustc-hash"]
arbitrary = [
	"dep:arbitrary",
	"dep:proptest",
	"dep:proptest-derive",
	"alloy-chains/arbitrary",
	"alloy-consensus/arbitrary",
	"alloy-primitives/arbitrary"
]
serde = [
	"dep:serde",
	"alloy-chains/serde",
	"alloy-consensus/serde",
	"alloy-primitives/serde"
]
std = [
	"alloy-chains/std",
	"alloy-primitives/std",
	"thiserror-no-std/std",
	"rustc-hash/std",
	"alloy-consensus/std",
	"once_cell/std",
	"serde?/std"
]
rustc-hash = ["dep:rustc-hash"]
