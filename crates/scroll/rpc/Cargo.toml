[package]
name = "reth-scroll-rpc"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "Ethereum RPC implementation for scroll."

[lints]
workspace = true

[dependencies]
# reth
reth-evm.workspace = true
reth-primitives.workspace = true
reth-primitives-traits.workspace = true
reth-provider.workspace = true
reth-rpc-eth-api.workspace = true
reth-rpc-eth-types.workspace = true
reth-tasks = { workspace = true, features = ["rayon"] }
reth-transaction-pool.workspace = true
reth-rpc.workspace = true
reth-node-api.workspace = true
reth-node-builder.workspace = true
reth-network-api.workspace = true
reth-chainspec.workspace = true

# scroll
reth-scroll-chainspec.workspace = true
reth-scroll-evm.workspace = true
reth-scroll-primitives = { workspace = true, features = ["serde", "serde-bincode-compat", "reth-codec"] }
scroll-alloy-consensus.workspace = true
scroll-alloy-evm.workspace = true
scroll-alloy-hardforks.workspace = true
scroll-alloy-network.workspace = true
scroll-alloy-rpc-types.workspace = true

# ethereum
alloy-primitives.workspace = true
alloy-rpc-types-eth.workspace = true
alloy-consensus.workspace = true
revm.workspace = true
alloy-transport.workspace = true
alloy-json-rpc.workspace = true
alloy-rpc-client.workspace = true
alloy-transport-http.workspace = true

# reqwest
reqwest = { workspace = true, default-features = false, features = ["rustls-tls-native-roots"] }

# tracing
tracing.workspace = true

# async
parking_lot.workspace = true
tokio.workspace = true

# rpc
jsonrpsee-types.workspace = true

# misc
eyre.workspace = true
thiserror.workspace = true
