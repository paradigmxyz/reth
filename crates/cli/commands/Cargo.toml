[package]
name = "reth-cli-commands"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]

[dependencies]
reth-beacon-consensus.workspace = true
reth-chainspec.workspace = true
reth-cli-runner.workspace = true
reth-cli-util.workspace = true
reth-config.workspace = true
reth-consensus.workspace = true
reth-db = { workspace = true, features = ["mdbx"] }
reth-db-api.workspace = true
reth-db-common.workspace = true
reth-downloaders.workspace = true
reth-ecies.workspace = true
reth-eth-wire.workspace = true
reth-evm.workspace = true
reth-exex.workspace = true
reth-fs-util.workspace = true
reth-network = { workspace = true, features = ["serde"] }
reth-network-p2p.workspace = true
reth-network-peers = { workspace = true, features = ["secp256k1"] }
reth-node-builder.workspace = true
reth-node-core.workspace = true
reth-node-events.workspace = true
reth-node-metrics.workspace = true
reth-primitives.workspace = true
reth-provider.workspace = true
reth-prune.workspace = true
reth-stages.workspace = true
reth-static-file-types.workspace = true
reth-static-file.workspace = true
reth-trie = { workspace = true, features = ["metrics"] }
reth-trie-db = { workspace = true, features = ["metrics"] }

itertools.workspace = true
futures.workspace = true
tokio.workspace = true

# misc
ahash = "0.8"
human_bytes = "0.4.1"
eyre.workspace = true
clap = { workspace = true, features = ["derive", "env"] }
serde.workspace = true
serde_json.workspace = true
tracing.workspace = true
backon.workspace = true
secp256k1 = { workspace = true, features = ["global-context", "rand-std", "recovery"] }

# io
fdlimit.workspace = true
toml = { workspace = true, features = ["display"] }

# tui
comfy-table = "7.0"
crossterm = "0.27.0"
ratatui = { version = "0.27", default-features = false, features = [
    "crossterm",
] }

# reth test-vectors
proptest = { workspace = true, optional = true }
arbitrary = { workspace = true, optional = true }
proptest-arbitrary-interop = { workspace = true, optional = true }

[dev-dependencies]
reth-discv4.workspace = true

[features]
default = []
dev = [
    "dep:proptest",
    "dep:arbitrary",
    "dep:proptest-arbitrary-interop",
    "reth-primitives/arbitrary",
    "reth-db-api/arbitrary"
]
