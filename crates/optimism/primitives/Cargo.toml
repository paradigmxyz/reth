[package]
name = "reth-optimism-primitives"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
description = "OP primitive types"

[lints]
workspace = true

[dependencies]
# reth
reth-primitives.workspace = true
reth-primitives-traits.workspace = true
reth-codecs = { workspace = true, optional = true, features = ["optimism"] }

# ethereum
alloy-primitives.workspace = true
alloy-consensus.workspace = true
alloy-rlp.workspace = true
alloy-eips.workspace = true
revm-primitives.workspace = true
secp256k1.workspace = true

# op
op-alloy-consensus.workspace = true

# codec
modular-bitfield = { workspace = true, optional = true }
zstd = { workspace = true, optional = true }
bytes.workspace = true
serde = { workspace = true, optional = true }

# misc
derive_more = { workspace = true, features = ["deref", "from", "constructor"] }
proptest = { workspace = true, optional = true }
rand = { workspace = true, optional = true }

# test
arbitrary = { workspace = true, features = ["derive"], optional = true }

[dev-dependencies]
proptest-arbitrary-interop.workspace = true
reth-codecs = { workspace = true, features = ["test-utils"] }
rstest.workspace = true
arbitrary.workspace = true

[features]
default = ["std", "reth-codec"]
std = [
    "reth-primitives/std",
    "reth-primitives-traits/std",
    "reth-codecs/std",
    "alloy-consensus/std",
    "alloy-eips/std",
    "alloy-primitives/std",
    "revm-primitives/std",
    "serde/std",
    "secp256k1/std",
    "reth-codecs/std",
]
optimism = [
    "reth-primitives/optimism",
    "reth-codecs/optimism",
    "revm-primitives/optimism",
]
reth-codec = [
    "dep:reth-codecs",
    "dep:zstd",
    "dep:modular-bitfield",
    "std",
    "rand",
    "dep:proptest",
    "dep:arbitrary",
    "reth-primitives/reth-codec",
    "reth-primitives-traits/reth-codec",
]
serde = [
    "dep:serde",
    "reth-primitives-traits/serde",
    "alloy-primitives/serde",
    "alloy-consensus/serde",
    "alloy-eips/serde",
    "bytes/serde",
    "reth-codecs?/serde",
    "op-alloy-consensus/serde",
]
arbitrary = [
    "dep:arbitrary",
    "reth-primitives-traits/arbitrary",
    "reth-primitives/arbitrary",
    "reth-codecs?/arbitrary",
    "op-alloy-consensus/arbitrary",
    "alloy-consensus/arbitrary",
    "alloy-eips/arbitrary",
    "alloy-primitives/arbitrary",
    "revm-primitives/arbitrary",
    "rand",
]
