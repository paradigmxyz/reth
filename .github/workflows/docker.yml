# Publishes the Docker image.

name: docker

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: ${{ github.repository_owner }}/reth
  OP_IMAGE_NAME: ${{ github.repository_owner }}/op-reth
  CARGO_TERM_COLOR: always
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/reth
  OP_DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/op-reth
  DOCKER_USERNAME: ${{ github.actor }}

jobs:
  build:
    name: build and push
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        isRC:
          - ${{ contains(github.ref, '-rc') }}
        build:
          - name: "Build and push reth image"
            id: reth_image
            command: "make IMAGE_NAME=$IMAGE_NAME DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME PROFILE=maxperf docker-build-push"
          - name: "Build and push reth image, tag as latest"
            id: reth_image_latest
            command: "make IMAGE_NAME=$IMAGE_NAME DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME PROFILE=maxperf docker-build-push-latest"
          - name: "Build and push op-reth image"
            id: op_reth_image
            command: "make IMAGE_NAME=$OP_IMAGE_NAME DOCKER_IMAGE_NAME=$OP_DOCKER_IMAGE_NAME PROFILE=maxperf op-docker-build-push"
          - name: "Build and push op-reth image, tag as latest"
            id: op_reth_image_latest
            command: "make IMAGE_NAME=$OP_IMAGE_NAME DOCKER_IMAGE_NAME=$OP_DOCKER_IMAGE_NAME PROFILE=maxperf op-docker-build-push-latest"
        exclude:
          # For non release candidate runs, exclude items that do not tag as "latest"
          - isRC: false
            build: { id: reth_image }
          - isRC: false
            build: { id: op_reth_image }
          # For release candidate runs, exclude items that tag as "latest"
          - isRC: true
            build: { id: reth_image_latest }
          - isRC: true
            build: { id: op_reth_image_latest }
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install cross main
        id: cross_main
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Log in to Docker
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username ${DOCKER_USERNAME} --password-stdin
      - name: Set up Docker builder
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install arm64,amd64
          docker buildx create --use --name cross-builder
      - name: ${{ matrix.build.name }}
        run: ${{ matrix.build.command }}
