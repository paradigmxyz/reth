# .github/workflows/preview.yml
name: Deploy PR previews

on: push
concurrency: preview-${{ github.ref }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - name: Install Playwright browsers
        # Required for rehype-mermaid to render Mermaid diagrams during build
        run: |
          cd docs/vocs/
          bun i
          npx playwright install --with-deps chromium

      - name: Build Rust documentation
        run: |
          echo "Starting in directory: $(pwd)"
          cd docs/vocs/
          echo "Now in directory: $(pwd)"
          bash scripts/build-cargo-docs.sh
          echo "Back in directory: $(pwd)"
          echo "Checking if docs exist at ../../target/doc:"
          ls -la ../../target/doc 2>/dev/null | head -10 || echo "../../target/doc not found"
          echo "Cargo docs build step completed"

      - name: Build Vocs
        run: |
          cd docs/vocs/ && bunx vocs build
          echo "Vocs Build Complete"

      - name: Generate redirects
        run: |
          cd docs/vocs/ && bun scripts/generate-redirects.ts
          echo "Redirects generated"

      - name: Inject cargo docs
        run: |
          cd docs/vocs/
          echo "Current directory: $(pwd)"
          echo "Checking target/doc from here:"
          ls -la ../../target/doc 2>/dev/null | head -5 || echo "target/doc not found"
          echo "Running inject script..."
          bun scripts/inject-cargo-docs.ts
          echo "Cargo docs injected"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs/vocs/docs/dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
